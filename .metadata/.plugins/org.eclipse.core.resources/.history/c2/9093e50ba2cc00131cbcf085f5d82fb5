package it.insidecode.spacetagger.framework.level;

import it.insidecode.spacetagger.PropertiesManager;
import it.insidecode.spacetagger.framework.Framework;
import it.insidecode.spacetagger.framework.Scene;
import it.insidecode.spacetagger.logic.Enemy;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.math.Vector2;


public class Scene08 extends Scene {
	public static final String SCENE_NAME = "Scene 8 - Harder Better Faster Stronger";

	
	public Scene08(Framework framework) {
		super(framework);
	}

	public String getName() {
		return SCENE_NAME;
	}

	
	
	@Override
	public void init() {
		Gdx.app.log(getName(), "init");

		EnemyHead head1 = new EnemyHead(framework, new Vector2(380,650), 5);
		head1.setPath(new FollowShipPath(framework, head1));
		head1.setSpeed(3f);
		head1.activate();
		chainEnemies(4, head1);
		
		EnemyHead head = new EnemyHead(framework, new Vector2(380,650), 5);
		head.setPath(new FollowShipPath(framework, head));
		head.setSpeed(3f);
		head.activate();
		chainEnemies(4, head);
	}
	
	private void chainEnemies(int enemyNum, Enemy firstEnemy){
		Enemy old = firstEnemy;
		for(int i = 0; i < enemyNum; i++){
			EnemyTail e = new EnemyTail(framework, new Vector2(200,650+i*60), head.getEnergy()-i);
			e.setPath(new ChainPath(old, e));
			e.activate();
			old = e;
		}
	}


	@Override
	public void dispose() {
		Gdx.app.log(getName(), "dispose");
	}
	
	

	public void update(float delta) {
		
		if (!head.isAlive()){
			getLevel().goToNextScene();
		}

		super.update(delta);
	}

}
